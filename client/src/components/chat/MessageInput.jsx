import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';
import { supabase } from '../../supabaseClient';

/**
 * –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π.
 * –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ:
 *  - –±–µ—Ä–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ user –∏–∑ Supabase
 *  - (–æ–ø—Ü.) –≥—Ä—É–∑–∏—Ç –ø–µ—Ä–≤—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ Storage (bucket "chat-attachments")
 *  - –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ public.chat_messages —Å –ø–æ–ª—è–º–∏:
 *      chat_id, body, file_url, file_name, file_type, file_size, attachment_url
 *
 * Props:
 *  - chatId: UUID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
 *  - disabled?: boolean
 *  - canSend?: boolean               // –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ª–æ–≥–∏–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏
 *  - onSent?: (insertedMessageLike)  // –∫–æ–ª–±—ç–∫ –ø–æ—Å–ª–µ —É–¥–∞—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
 *  - onTypingPulse?: () => void      // "–ø–µ—á–∞—Ç–∞–µ—Ç‚Ä¶" —Å –ª–µ–≥–∫–∏–º –¥–µ–±–∞—É–Ω—Å–æ–º
 *
 * –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ë–î:
 *  - chat_messages: –∫–æ–ª–æ–Ω–∫–∏ body (text), author_id (uuid, DEFAULT auth.uid()), chat_id (uuid)
 *                   file_url, file_name, file_type, file_size, attachment_url (text) ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
 *  - RLS –¥–ª—è INSERT —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –ø–∏—Å–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É —á–∞—Ç–∞; author_id —á–µ—Ä–µ–∑ DEFAULT
 *  - –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ–∑–¥–∞—Ç—å Storage bucket "chat-attachments" (public) –∏–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –∏–º—è –Ω–∏–∂–µ
 */

const STORAGE_BUCKET = 'chat-attachments';

export default function MessageInput({
  chatId,
  disabled = false,
  canSend,
  onSent,
  onTypingPulse,
}) {
  const [text, setText] = useState('');
  const [files, setFiles] = useState([]); // File[]
  const [sending, setSending] = useState(false);

  const inputRef = useRef(null);
  const fileRef = useRef(null);

  const [userId, setUserId] = useState(null);
  useEffect(() => {
    let sub;
    (async () => {
      const { data } = await supabase.auth.getSession();
      setUserId(data?.session?.user?.id || null);
      sub = supabase.auth.onAuthStateChange((_e, s) => {
        setUserId(s?.user?.id || null);
      }).data?.subscription;
    })();
    return () => sub?.unsubscribe?.();
  }, []);

  const normalizedCanSend = useMemo(() => {
    const hasContent = text.trim().length > 0 || files.length > 0;
    const ok = !!chatId && !disabled && !sending && !!userId && hasContent;
    return canSend ?? ok;
  }, [canSend, disabled, sending, chatId, userId, text, files]);

  // "–ø–µ—á–∞—Ç–∞–µ—Ç‚Ä¶" –¥–µ–±–∞—É–Ω—Å
  const typingDebounceRef = useRef(null);
  const pulseTyping = useCallback(() => {
    if (!onTypingPulse) return;
    clearTimeout(typingDebounceRef.current);
    typingDebounceRef.current = setTimeout(() => {
      try { onTypingPulse(); } catch {}
    }, 300);
  }, [onTypingPulse]);
  useEffect(() => () => clearTimeout(typingDebounceRef.current), []);

  const handleKeyDown = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      submit();
    }
  };

  const handleChooseFiles = (e) => {
    const chosen = Array.from(e.target.files || []);
    if (!chosen.length) return;
    setFiles(prev => [...prev, ...chosen]);
  };

  const removeFileAt = (idx) => {
    setFiles(prev => prev.filter((_, i) => i !== idx));
    inputRef.current?.focus();
  };

  const clearForm = () => {
    setText('');
    setFiles([]);
    try { if (fileRef.current) fileRef.current.value = ''; } catch {}
  };

  // –∑–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ Storage -> –ø—É–±–ª–∏—á–Ω—ã–π URL
  const uploadFirstFile = async () => {
    if (!files.length) return null;
    const file = files[0];
    const ext = (file.name.split('.').pop() || 'bin').toLowerCase();
    const path = `${chatId}/${Date.now()}-${Math.random().toString(36).slice(2)}.${ext}`;

    // –µ—Å–ª–∏ –±–∞–∫–µ—Ç–∞ –Ω–µ—Ç/–ø—Ä–∏–≤–∞—Ç–Ω—ã–π ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª
    const up = await supabase.storage.from(STORAGE_BUCKET).upload(path, file, {
      cacheControl: '3600',
      upsert: false,
    });
    if (up.error) {
      console.warn('[CHAT] file upload error:', up.error?.message || up.error);
      return null;
    }
    const pub = supabase.storage.from(STORAGE_BUCKET).getPublicUrl(path);
    const publicUrl = pub?.data?.publicUrl || null;

    return {
      file_url: publicUrl,
      attachment_url: publicUrl,
      file_name: file.name,
      file_type: file.type || null,
      file_size: file.size || null,
    };
  };

  const submit = async () => {
    if (!normalizedCanSend) return;
    const body = text.trim();
    if (!body && files.length === 0) return;

    setSending(true);
    try {
      let fileFields = null;
      if (files.length > 0) {
        fileFields = await uploadFirstFile();
      }

      const row = {
        chat_id: chatId,
        body: body || (fileFields ? '' : null), // –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª ‚Äî –¥–æ–ø—É—Å—Ç–∏–º –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
        ...(fileFields || {}),
      };

      const { data, error } = await supabase
        .from('chat_messages')
        .insert(row)
        .select('id, chat_id, author_id, body, file_url, file_name, file_type, file_size, attachment_url, created_at')
        .single();

      if (error) throw error;

      onSent?.(data || row);
      clearForm();
    } catch (err) {
      console.error('[CHAT] send error:', err);
      alert(err?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
    } finally {
      setSending(false);
      inputRef.current?.focus();
    }
  };

  return (
    <div style={{ display:'grid', gridTemplateColumns:'1fr auto', gap:8 }}>
      <div style={{ display:'flex', flexDirection:'column', gap:8 }}>
        <textarea
          ref={inputRef}
          rows={2}
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶ (Enter ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, Shift+Enter ‚Äî –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)"
          value={text}
          onChange={(e) => { setText(e.target.value); pulseTyping(); }}
          onKeyDown={handleKeyDown}
          disabled={disabled || sending || !chatId}
          style={{
            width:'100%',
            resize:'none',
            border:'1px solid #e5e7eb',
            borderRadius:8,
            padding:'10px 12px',
            outline:'none'
          }}
        />

        {files.length > 0 && (
          <div style={{
            display:'flex', flexWrap:'wrap', gap:8,
            background:'#f9fafb', border:'1px dashed #e5e7eb', borderRadius:8, padding:8
          }}>
            {files.map((f, i) => (
              <div key={i} style={{
                display:'flex', alignItems:'center', gap:8,
                border:'1px solid #e5e7eb', borderRadius:8, padding:'6px 8px', background:'#fff'
              }}>
                <span style={{ fontSize:12, color:'#374151' }}>
                  {f.name} {f.size ? `(${Math.round(f.size/1024)} KB)` : ''}
                </span>
                <button
                  type="button"
                  onClick={() => removeFileAt(i)}
                  style={{
                    border:'none', background:'transparent', color:'#ef4444',
                    cursor:'pointer', fontWeight:700, fontSize:12
                  }}
                  title="–£–±—Ä–∞—Ç—å"
                >
                  ‚úï
                </button>
              </div>
            ))}
          </div>
        )}

        <div style={{ display:'flex', alignItems:'center', gap:8 }}>
          <label
            style={{
              display:'inline-flex', alignItems:'center', gap:6,
              border:'1px solid #e5e7eb', borderRadius:8, padding:'8px 10px',
              cursor:'pointer', background:'#fff', fontWeight:600
            }}
          >
            üìé –§–∞–π–ª
            <input
              ref={fileRef}
              type="file"
              multiple
              onChange={handleChooseFiles}
              style={{ display:'none' }}
              disabled={disabled || sending || !chatId}
            />
          </label>

          <button
            type="button"
            onClick={submit}
            disabled={!normalizedCanSend}
            style={{
              padding:'10px 16px',
              borderRadius:8,
              border:'none',
              background: normalizedCanSend ? '#2563eb' : '#cbd5e1',
              color:'#fff',
              fontWeight:700,
              cursor: normalizedCanSend ? 'pointer' : 'not-allowed'
            }}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
}

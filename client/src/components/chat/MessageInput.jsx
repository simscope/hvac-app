// client/src/components/chat/MessageInput.jsx
import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';

/**
 * –ü—Ä–æ—Å—Ç–æ–π –∏–Ω–ø—É—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —Å:
 * - –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø–æ Enter (Shift+Enter ‚Äî –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
 * - –≤—ã–±–æ—Ä–æ–º/—Å–±—Ä–æ—Å–æ–º —Ñ–∞–π–ª–æ–≤ (–ø–µ—Ä–≤—ã–µ —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–º)
 * - –∫–æ–ª–±—ç–∫–æ–º onTypingPulse() –¥–ª—è "–ø–µ—á–∞—Ç–∞–µ—Ç‚Ä¶" (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å –ª—ë–≥–∫–∏–º –¥–µ–±–∞—É–Ω—Å–æ–º)
 *
 * Props:
 * - chatId: UUID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
 * - disabled?: boolean
 * - onSend: ({ text, files }) => Promise<void> | void
 * - onSent?: (msgLike) => void   // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
 * - onTypingPulse?: () => void   // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
 * - canSend?: boolean            // –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ disabled –ª–æ–≥–∏–∫–∏
 */
export default function MessageInput({
  chatId,
  disabled = false,
  onSend,
  onSent,
  onTypingPulse,
  canSend, // –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
}) {
  const [text, setText] = useState('');
  const [files, setFiles] = useState([]);
  const [sending, setSending] = useState(false);

  const inputRef = useRef(null);
  const fileRef = useRef(null);

  const normalizedCanSend = useMemo(() => {
    const hasContent = text.trim().length > 0 || files.length > 0;
    return canSend ?? (!disabled && !sending && !!chatId && hasContent);
  }, [canSend, disabled, sending, chatId, text, files]);

  // –î–µ–±–∞—É–Ω—Å –¥–ª—è onTypingPulse
  const typingDebounceRef = useRef(null);
  const pulseTyping = useCallback(() => {
    if (!onTypingPulse) return;
    clearTimeout(typingDebounceRef.current);
    typingDebounceRef.current = setTimeout(() => {
      try { onTypingPulse(); } catch {}
    }, 300);
  }, [onTypingPulse]);

  useEffect(() => () => clearTimeout(typingDebounceRef.current), []);

  const handleKeyDown = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      submit();
    }
  };

  const handleChooseFiles = (e) => {
    const chosen = Array.from(e.target.files || []);
    if (!chosen.length) return;
    setFiles(prev => [...prev, ...chosen]);
  };

  const removeFileAt = (idx) => {
    setFiles(prev => prev.filter((_, i) => i !== idx));
    // –≤–µ—Ä–Ω—É—Ç—å —Ñ–æ–∫—É—Å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    inputRef.current?.focus();
  };

  const clearForm = () => {
    setText('');
    setFiles([]);
    try { if (fileRef.current) fileRef.current.value = ''; } catch {}
  };

  const submit = async () => {
    if (!normalizedCanSend || !onSend) return;
    const payload = {
      text: text.trim(),
      files
    };
    try {
      setSending(true);
      await onSend(payload);
      onSent?.(payload);
      clearForm();
    } catch (err) {
      console.error('Message send error:', err);
      alert(err?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
    } finally {
      setSending(false);
      // –≤–µ—Ä–Ω—É—Ç—å —Ñ–æ–∫—É—Å
      inputRef.current?.focus();
    }
  };

  return (
    <div style={{ display:'grid', gridTemplateColumns:'1fr auto', gap:8 }}>
      <div style={{ display:'flex', flexDirection:'column', gap:8 }}>
        <textarea
          ref={inputRef}
          rows={2}
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶ (Enter ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, Shift+Enter ‚Äî –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)"
          value={text}
          onChange={(e) => { setText(e.target.value); pulseTyping(); }}
          onKeyDown={handleKeyDown}
          disabled={disabled || sending || !chatId}
          style={{
            width:'100%',
            resize:'none',
            border:'1px solid #e5e7eb',
            borderRadius:8,
            padding:'10px 12px',
            outline:'none'
          }}
        />

        {files.length > 0 && (
          <div style={{
            display:'flex', flexWrap:'wrap', gap:8,
            background:'#f9fafb', border:'1px dashed #e5e7eb', borderRadius:8, padding:8
          }}>
            {files.map((f, i) => (
              <div key={i} style={{
                display:'flex', alignItems:'center', gap:8,
                border:'1px solid #e5e7eb', borderRadius:8, padding:'6px 8px', background:'#fff'
              }}>
                <span style={{ fontSize:12, color:'#374151' }}>
                  {f.name} {f.size ? `(${Math.round(f.size/1024)} KB)` : ''}
                </span>
                <button
                  type="button"
                  onClick={() => removeFileAt(i)}
                  style={{
                    border:'none', background:'transparent', color:'#ef4444',
                    cursor:'pointer', fontWeight:700, fontSize:12
                  }}
                  title="–£–±—Ä–∞—Ç—å"
                >
                  ‚úï
                </button>
              </div>
            ))}
          </div>
        )}

        <div style={{ display:'flex', alignItems:'center', gap:8 }}>
          <label
            style={{
              display:'inline-flex', alignItems:'center', gap:6,
              border:'1px solid #e5e7eb', borderRadius:8, padding:'8px 10px',
              cursor:'pointer', background:'#fff', fontWeight:600
            }}
          >
            üìé –§–∞–π–ª
            <input
              ref={fileRef}
              type="file"
              multiple
              onChange={handleChooseFiles}
              style={{ display:'none' }}
              disabled={disabled || sending || !chatId}
            />
          </label>

          <button
            type="button"
            onClick={submit}
            disabled={!normalizedCanSend}
            style={{
              padding:'10px 16px',
              borderRadius:8,
              border:'none',
              background: normalizedCanSend ? '#2563eb' : '#cbd5e1',
              color:'#fff',
              fontWeight:700,
              cursor: normalizedCanSend ? 'pointer' : 'not-allowed'
            }}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
}
